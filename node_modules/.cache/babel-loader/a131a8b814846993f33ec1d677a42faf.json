{"ast":null,"code":"var _jsxFileName = \"/home/mike/Documents/roc/front-end/todo_list_react/src/components/TodoList/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todoList = [{\n  id: 'a',\n  done: true,\n  name: 'Huiswerk C# Maken'\n}, {\n  id: 'b',\n  done: false,\n  name: 'Spotify casus maken'\n}];\n\nconst TodoList = () => {\n  _s();\n\n  const [list, setList] = React.useState(todoList);\n  const [name, setName] = React.useState(''); // Linked de value van de input en zet die neer als name\n\n  function handleChange(event) {\n    setName(event.target.value);\n  } // Zorgt ervoor dat de er een nieuwe veld toegevoegt word\n\n\n  function handleAdd() {\n    const newList = list.concat({\n      name,\n      id: uuidv4(),\n      done: false\n    });\n    setList(newList);\n    setName('');\n  }\n\n  function handleUpdate(id) {\n    const newList = list.map(item => {\n      if (item.id === id) {\n        const updatedItem = { ...item,\n          done: !item.done\n        };\n        return updatedItem;\n      }\n\n      return item;\n    });\n    setList(newList);\n  }\n\n  const List = _ref => {\n    let {\n      list\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: item.done ? 'finished_task' : null,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleUpdate(item.id),\n          children: \" Done \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), item.name]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddItem, {\n      name: name,\n      onChange: handleChange,\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodoList, \"Syv+8xJacEK8KlGCTrnP7XTn6bI=\");\n\n_c = TodoList;\n\nconst AddItem = _ref2 => {\n  let {\n    name,\n    onChange,\n    onAdd\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onAdd,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = AddItem;\nexport default TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"AddItem\");","map":{"version":3,"sources":["/home/mike/Documents/roc/front-end/todo_list_react/src/components/TodoList/TodoList.jsx"],"names":["React","v4","uuidv4","todoList","id","done","name","TodoList","list","setList","useState","setName","handleChange","event","target","value","handleAdd","newList","concat","handleUpdate","map","item","updatedItem","List","AddItem","onChange","onAdd"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst todoList = [\n    {\n      id: 'a',\n      done: true,\n      name: 'Huiswerk C# Maken',\n    },\n    {\n      id: 'b',\n      done: false,\n      name: 'Spotify casus maken',\n    },\n];\n\nconst TodoList = () => {\n    const [list, setList] = React.useState(todoList);\n    const [name, setName] = React.useState('');\n\n    \n    // Linked de value van de input en zet die neer als name\n    function handleChange(event) {\n      setName(event.target.value);\n    }\n\n    // Zorgt ervoor dat de er een nieuwe veld toegevoegt word\n    function handleAdd() {\n      const newList = list.concat({ name, id: uuidv4(), done: false });\n  \n      setList(newList);\n  \n      setName('');\n    }\n\n    function handleUpdate(id) {\n      const newList = list.map((item) => {\n        if (item.id === id) {\n          const updatedItem = {\n            ...item,\n            done: !item.done,\n          };\n\n          return updatedItem;\n        }\n\n        return item;\n      });\n      \n      setList(newList);\n      \n    }\n\n    \n    const List = ({ list }) => (\n  \n      <ul>\n        {list.map((item) => (              \n          <li key={item.id} className={ item.done ? 'finished_task' : null }>\n              <button type=\"button\" onClick={() => handleUpdate(item.id)}> Done </button>\n    \n              {item.name}\n          </li>\n          ))}\n      </ul>\n    );\n    \n\n    \n    return (\n      <div>\n        <AddItem\n          name={name}\n          onChange={handleChange}\n          onAdd={handleAdd}\n        />\n  \n        <List list={list} />\n      </div>\n    );\n};\n  \nconst AddItem = ({ name, onChange, onAdd }) => (\n  <div>\n    <input type=\"text\" value={name} onChange={onChange} />\n    <button type=\"button\" onClick={onAdd}>\n      Add\n    </button>\n  </div>\n);\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}