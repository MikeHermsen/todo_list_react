{"ast":null,"code":"import _objectSpread from \"/home/mike/Documents/roc/front-end/todo_list_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mike/Documents/roc/front-end/todo_list_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mike/Documents/roc/front-end/todo_list_react/src/components/TodoList/TodoList.jsx\";\n\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nvar todoList = [{\n  id: 'a',\n  done: true,\n  name: 'Huiswerk C# Maken'\n}, {\n  id: 'b',\n  done: false,\n  name: 'Spotify casus maken'\n}];\n\nvar TodoList = function TodoList() {\n  var _React$useState = React.useState(todoList),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      list = _React$useState2[0],\n      setList = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      name = _React$useState4[0],\n      setName = _React$useState4[1]; // Linked de value van de input en zet die neer als name\n\n\n  function handleChange(event) {\n    setName(event.target.value);\n  } // Zorgt ervoor dat de er een nieuwe veld toegevoegt word\n\n\n  function handleAdd() {\n    var newList = list.concat({\n      name: name,\n      id: uuidv4(),\n      done: false\n    });\n    setList(newList);\n    setName('');\n  }\n\n  function handleUpdate(id) {\n    var newList = list.map(function (item) {\n      if (item.id === id) {\n        var updatedItem = _objectSpread({}, item, {\n          done: !item.done\n        });\n\n        return updatedItem;\n      }\n\n      return item;\n    });\n    setList(newList);\n  }\n\n  var List = function List(_ref) {\n    var list = _ref.list;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, list.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        className: item.done ? 'finished_task' : null,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return handleUpdate(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, \" Done \"), item.name);\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddItem, {\n    name: name,\n    onChange: handleChange,\n    onAdd: handleAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    list: list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar AddItem = function AddItem(_ref2) {\n  var name = _ref2.name,\n      onChange = _ref2.onChange,\n      onAdd = _ref2.onAdd;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Add\"));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/mike/Documents/roc/front-end/todo_list_react/src/components/TodoList/TodoList.jsx"],"names":["React","v4","uuidv4","todoList","id","done","name","TodoList","useState","list","setList","setName","handleChange","event","target","value","handleAdd","newList","concat","handleUpdate","map","item","updatedItem","List","AddItem","onChange","onAdd"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst todoList = [\n    {\n      id: 'a',\n      done: true,\n      name: 'Huiswerk C# Maken',\n    },\n    {\n      id: 'b',\n      done: false,\n      name: 'Spotify casus maken',\n    },\n];\n\nconst TodoList = () => {\n    const [list, setList] = React.useState(todoList);\n    const [name, setName] = React.useState('');\n\n    \n    // Linked de value van de input en zet die neer als name\n    function handleChange(event) {\n      setName(event.target.value);\n    }\n\n    // Zorgt ervoor dat de er een nieuwe veld toegevoegt word\n    function handleAdd() {\n      const newList = list.concat({ name, id: uuidv4(), done: false });\n  \n      setList(newList);\n  \n      setName('');\n    }\n\n    function handleUpdate(id) {\n      const newList = list.map((item) => {\n        if (item.id === id) {\n          const updatedItem = {\n            ...item,\n            done: !item.done,\n          };\n\n          return updatedItem;\n        }\n\n        return item;\n      });\n      \n      setList(newList);\n      \n    }\n\n    \n    const List = ({ list }) => (\n  \n      <ul>\n        {list.map((item) => (              \n          <li key={item.id} className={ item.done ? 'finished_task' : null }>\n              <button type=\"button\" onClick={() => handleUpdate(item.id)}> Done </button>\n    \n              {item.name}\n          </li>\n          ))}\n      </ul>\n    );\n    \n\n    \n    return (\n      <div>\n        <AddItem\n          name={name}\n          onChange={handleChange}\n          onAdd={handleAdd}\n        />\n  \n        <List list={list} />\n      </div>\n    );\n};\n  \nconst AddItem = ({ name, onChange, onAdd }) => (\n  <div>\n    <input type=\"text\" value={name} onChange={onChange} />\n    <button type=\"button\" onClick={onAdd}>\n      Add\n    </button>\n  </div>\n);\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}